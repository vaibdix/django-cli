name: Release

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v1.0.0
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Build for multiple platforms
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          # Exclude combinations that don't make sense
          - goarch: arm64
            goos: windows
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Get dependencies
      run: go mod download
    
    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        # Set binary name based on OS
        if [ "$GOOS" = "windows" ]; then
          BINARY_NAME="django-cli-${GOOS}-${GOARCH}.exe"
        else
          BINARY_NAME="django-cli-${GOOS}-${GOARCH}"
        fi
        
        # Build the binary
        go build -ldflags="-s -w" -o $BINARY_NAME
        
        # Create a compressed archive
        if [ "$GOOS" = "windows" ]; then
          zip "django-cli-${GOOS}-${GOARCH}.zip" $BINARY_NAME
        else
          tar -czf "django-cli-${GOOS}-${GOARCH}.tar.gz" $BINARY_NAME
        fi
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: django-cli-${{ matrix.goos }}-${{ matrix.goarch }}
        path: |
          django-cli-*
          !django-cli-*.exe
          !django-cli-*-*

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v3
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          django-cli-*/django-cli-*
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}